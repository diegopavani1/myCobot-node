name: Publish to NPM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Check if this version already exists on npm
        if npm view mycobot-node@$CURRENT_VERSION version >/dev/null 2>&1; then
          echo "version-exists=true" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION already exists on npm"
        else
          echo "version-exists=false" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION is new, will publish"
        fi
        
    - name: Publish to NPM
      if: steps.version-check.outputs.version-exists == 'false'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: steps.version-check.outputs.version-exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-check.outputs.current-version }}
        release_name: Release v${{ steps.version-check.outputs.current-version }}
        body: |
          ## Changes in v${{ steps.version-check.outputs.current-version }}
          
          Auto-generated release for npm package publication.
          
          ### Installation
          ```bash
          npm install mycobot-node
          ```
          
          ### Documentation
          See [README.md](https://github.com/diegopavani1/mycobot-controller#readme) for usage instructions.
        draft: false
        prerelease: false
        
    - name: Skip publishing (version exists)
      if: steps.version-check.outputs.version-exists == 'true'
      run: |
        echo "‚è≠Ô∏è  Skipping publish - version ${{ steps.version-check.outputs.current-version }} already exists on npm"
        echo "üí° To publish a new version, update the version in package.json"
